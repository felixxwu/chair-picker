[{"C:\\Users\\Felix\\git\\chair-picker\\src\\index.tsx":"1","C:\\Users\\Felix\\git\\chair-picker\\src\\reportWebVitals.ts":"2","C:\\Users\\Felix\\git\\chair-picker\\src\\App.tsx":"3","C:\\Users\\Felix\\git\\chair-picker\\src\\components\\PersonCircle.tsx":"4","C:\\Users\\Felix\\git\\chair-picker\\src\\components\\PeopleList.tsx":"5","C:\\Users\\Felix\\git\\chair-picker\\src\\atoms\\peopleAtom.tsx":"6","C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\warning.tsx":"7","C:\\Users\\Felix\\git\\chair-picker\\src\\classes\\PeopleClass.tsx":"8","C:\\Users\\Felix\\git\\chair-picker\\src\\classes\\PersonClass.tsx":"9","C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\constants.tsx":"10","C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\hsl2rgb.tsx":"11","C:\\Users\\Felix\\git\\chair-picker\\src\\components\\AddPerson.tsx":"12","C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\findDistinctHue.tsx":"13","C:\\Users\\Felix\\git\\chair-picker\\src\\components\\ElectedPerson.tsx":"14","C:\\Users\\Felix\\git\\chair-picker\\src\\atoms\\isNewElectAtom.tsx":"15"},{"size":1037,"mtime":1610134603560,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":4560,"mtime":1610393252461,"results":"19","hashOfConfig":"17"},{"size":4736,"mtime":1610303816457,"results":"20","hashOfConfig":"17"},{"size":1117,"mtime":1610303986697,"results":"21","hashOfConfig":"17"},{"size":180,"mtime":1610135217051,"results":"22","hashOfConfig":"17"},{"size":116,"mtime":1610147951485,"results":"23","hashOfConfig":"17"},{"size":4168,"mtime":1610391420220,"results":"24","hashOfConfig":"17"},{"size":896,"mtime":1610141659488,"results":"25","hashOfConfig":"17"},{"size":682,"mtime":1610393266161,"results":"26","hashOfConfig":"17"},{"size":772,"mtime":1610135714305,"results":"27","hashOfConfig":"17"},{"size":2386,"mtime":1610303919534,"results":"28","hashOfConfig":"17"},{"size":673,"mtime":1610136781845,"results":"29","hashOfConfig":"17"},{"size":6534,"mtime":1610393028652,"results":"30","hashOfConfig":"17"},{"size":115,"mtime":1610146682052,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1b3j3fm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Felix\\git\\chair-picker\\src\\index.tsx",[],["66","67"],"C:\\Users\\Felix\\git\\chair-picker\\src\\reportWebVitals.ts",[],["68","69"],"C:\\Users\\Felix\\git\\chair-picker\\src\\App.tsx",["70"],"C:\\Users\\Felix\\git\\chair-picker\\src\\components\\PersonCircle.tsx",["71"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport styled from 'styled-components'\r\nimport peopleAtom from '../atoms/peopleAtom';\r\nimport constants from '../utils/constants';\r\nimport hsl2rgb from '../utils/hsl2rgb';\r\nimport warning from '../utils/warning';\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/firestore\"\r\n\r\nfunction PersonCircle(props: {\r\n    id: string,\r\n    index: number\r\n}) {\r\n    const [people, setPeople] = useRecoilState(peopleAtom)\r\n    const [hidden, SetHidden] = useState(true)\r\n    const person = people.getPerson(props.id)\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            SetHidden(false)\r\n        }, props.index * constants.INIT_ANIMATION_TIME);\r\n    }, [])\r\n\r\n    if (person === null) return warning('person is null')\r\n\r\n    const colour = hsl2rgb(person.hue / 360, constants.PERSON_SATURATION, constants.PERSON_LIGHTNESS, 1)\r\n    const colourBorder = hsl2rgb(person.hue / 360, constants.PERSON_SATURATION, constants.PERSON_LIGHTNESS_BORDER, 1)\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.value.length === 0) {\r\n            handleDelete()\r\n            return\r\n        }\r\n        people.updatePerson(props.id, {name: event.target.value}, setPeople)\r\n    }\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            if (inputRef.current === null) return warning('inputRef is null')\r\n            inputRef.current.blur()\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (inputRef.current === null) return warning('inputRef is null')\r\n        inputRef.current.focus()\r\n        inputRef.current.setSelectionRange(0, inputRef.current.value.length)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        firebase.firestore().collection(constants.PEOPLE_COLLECTION).doc(props.id).delete()\r\n    }\r\n\r\n    const handleHide = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        event.stopPropagation()\r\n        people.updatePerson(props.id, {hide: !person.hide}, setPeople)\r\n    }\r\n\r\n    return (\r\n        <PersonCircleDiv\r\n            id={props.id}\r\n            className=\"grid3x3\"\r\n            onClick={handleClick}\r\n            theme={{colour, hide: person.hide, colourBorder, hidden}}\r\n        >\r\n            <Button className=\"a2\" onClick={handleHide}>\r\n                {person.hide ? constants.UNHIDE_TEXT : constants.HIDE_TEXT}\r\n            </Button>\r\n            <NameInput\r\n                className=\"a5\"\r\n                value={person.name}\r\n                onChange={handleNameChange}\r\n                onKeyPress={handleKeyPress}\r\n                ref={inputRef}\r\n                theme={{nameLength: person.name.length}}\r\n            />\r\n            <Button className=\"a8\" onClick={handleDelete}>\r\n                {constants.DELETE_TEXT}\r\n            </Button>\r\n        </PersonCircleDiv>\r\n    );\r\n}\r\n\r\nconst PersonCircleDiv = styled.div`\r\n    background-color: ${props => props.theme.colour};\r\n    color: var(--white);\r\n    width: var(--personCircleWidth);\r\n    height: var(--personCircleHeight);\r\n    border-radius: var(--personCircleBorderRadius);\r\n    border: var(--personCircleBorderWidth) solid ${props => props.theme.colourBorder};\r\n    box-sizing: border-box;\r\n    cursor: text;\r\n    box-shadow: var(--personCircleBoxShadow);\r\n    transition: var(--shortTransition);\r\n\r\n    ${props => {\r\n        if (props.theme.hidden) {\r\n            return `\r\n                opacity: 0;\r\n                transform: translateY(var(--fadeUpDistance));\r\n            `\r\n        } else {\r\n            return `\r\n                opacity: ${props.theme.hide ? constants.HIDDEN_OPACITY : 1};\r\n                transform: translateY(0);\r\n            `\r\n        }\r\n    }}\r\n\r\n    --buttonOpacity: 0;\r\n    &:hover {\r\n        --buttonOpacity: 1;\r\n    }\r\n`\r\n\r\nconst NameInput = styled.input`\r\n    width: ${props => props.theme.nameLength}ch;\r\n    background: transparent;\r\n    color: var(--white);\r\n    outline: none;\r\n    border: none;\r\n    font-family: monospace;\r\n    font-weight: bold;\r\n    font-size: min(var(--personCircleMaxFontSize), calc(var(--personCircleTextWidth) / ${props => props.theme.nameLength} / 0.54966666666));\r\n    padding: 0;\r\n    margin: 0;\r\n`\r\n\r\nconst Button = styled.span`\r\n    opacity: var(--buttonOpacity);\r\n    font-size: var(--personCircleButtonFontSize);\r\n    padding: var(--personCircleButtonPadding);\r\n    cursor: pointer;\r\n    transition: var(--shortTransition);\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nexport default PersonCircle;\r\n","C:\\Users\\Felix\\git\\chair-picker\\src\\components\\PeopleList.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\atoms\\peopleAtom.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\warning.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\classes\\PeopleClass.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\classes\\PersonClass.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\constants.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\hsl2rgb.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\components\\AddPerson.tsx",["72"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport constants from '../utils/constants';\r\nimport AddIconSvg from '../images/add.svg'\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/firestore\"\r\nimport { useRecoilValue } from 'recoil';\r\nimport peopleAtom from '../atoms/peopleAtom';\r\nimport findDistinctHue from '../utils/findDistinctHue';\r\nimport Person from '../classes/PersonClass';\r\n\r\nfunction AddPerson(props: {\r\n    animationDelay: number\r\n}) {\r\n    const people = useRecoilValue(peopleAtom)\r\n    const [hidden, SetHidden] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            SetHidden(false)\r\n        }, props.animationDelay);\r\n    }, [])\r\n    \r\n    const handleClick = () => {\r\n        const hue = findDistinctHue(people.list.map(person => person.hue))\r\n        const newPerson = new Person('', constants.DEFAULT_NAME, hue, false, (new Date()).getTime(), 0)\r\n        firebase.firestore().collection(constants.PEOPLE_COLLECTION).add({\r\n            name: newPerson.name,\r\n            hue: newPerson.hue,\r\n            hide: newPerson.hide,\r\n            created: newPerson.created,\r\n            elected: newPerson.elected\r\n        }).then(docRef => {\r\n            document.getElementById(docRef.id)?.click()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AddPersonDiv className=\"grid3x3\" onClick={handleClick} theme={{hidden}}>\r\n            <AddIcon src={AddIconSvg}/>\r\n        </AddPersonDiv>\r\n    );\r\n}\r\n\r\nconst AddPersonDiv = styled.div`\r\n    color: var(--white);\r\n    width: var(--personCircleWidth);\r\n    height: var(--personCircleHeight);\r\n    border-radius: var(--personCircleBorderRadius);\r\n    border: var(--personCircleBorderWidth) solid var(--white);\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    transition: var(--shortTransition);\r\n\r\n    ${props => {\r\n        if (props.theme.hidden) {\r\n            return `\r\n                opacity: 0;\r\n                transform: translateY(var(--fadeUpDistance));\r\n            `\r\n        } else {\r\n            return `\r\n                opacity: 1;\r\n                transform: translateY(0);\r\n            `\r\n        }\r\n    }}\r\n\r\n    &:hover {\r\n        background-color: var(--offBlack);\r\n    }\r\n`\r\n\r\nconst AddIcon = styled.img`\r\n    width: var(--addPersonIconWidth);\r\n    filter: brightness(var(--lightness));\r\n`\r\n\r\nexport default AddPerson;\r\n","C:\\Users\\Felix\\git\\chair-picker\\src\\utils\\findDistinctHue.tsx",[],"C:\\Users\\Felix\\git\\chair-picker\\src\\components\\ElectedPerson.tsx",["73"],"C:\\Users\\Felix\\git\\chair-picker\\src\\atoms\\isNewElectAtom.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":24,"column":8,"nodeType":"86","endLine":24,"endColumn":10,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":22,"column":8,"nodeType":"86","endLine":22,"endColumn":10,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"90","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":15},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"@typescript-eslint/no-unused-vars","'useRecoilState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.index'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'props.animationDelay'. Either include it or remove the dependency array.",["94"],"'warning' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [props.index]",{"range":"99","text":"100"},"Update the dependencies array to be: [props.animationDelay]",{"range":"101","text":"102"},[815,817],"[props.index]",[725,727],"[props.animationDelay]"]